–Ø –≤–Ω—ë—Å –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è, —á—Ç–æ–±—ã –∏—Å–ø—Ä–∞–≤–∏—Ç—å –ø—Ä–æ–±–ª–µ–º—É —Å –Ω–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º—ã–º–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞–º–∏. –¢–µ–ø–µ—Ä—å –∫–æ–¥:  

- –ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –ø–µ—Ä–µ–¥–∞–≤–∞–µ–º—ã—Ö –ø–ª–∞—Ç—Ñ–æ—Ä–º –ø–µ—Ä–µ–¥ –≥–µ–Ω–µ—Ä–∞—Ü–∏–µ–π.  
- –ü—Ä–∏–≤–æ–¥–∏—Ç –Ω–∞–∑–≤–∞–Ω–∏—è –ø–ª–∞—Ç—Ñ–æ—Ä–º –∫ –Ω–∏–∂–Ω–µ–º—É —Ä–µ–≥–∏—Å—Ç—Ä—É (–µ—Å–ª–∏ –≤–¥—Ä—É–≥ –≥–¥–µ-—Ç–æ –µ—Å—Ç—å —Ä–∞–∑–Ω–∏—Ü–∞ –≤ —Ä–µ–≥–∏—Å—Ç—Ä–µ).  
- –õ–æ–≥–∏—Ä—É–µ—Ç —Å–ø–∏—Å–æ–∫ –ø–ª–∞—Ç—Ñ–æ—Ä–º –¥–ª—è –æ—Ç–ª–∞–¥–∫–∏.  
- –î–æ–±–∞–≤–ª—è–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫—É –æ—à–∏–±–æ–∫, –µ—Å–ª–∏ –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞ –≤ `PLATFORM_PROMPTS`.  

–í–æ—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –∫–æ–¥:  

```python
import openai
from flask import Flask, render_template, request, flash
from dotenv import load_dotenv
import os
import re
import logging
from collections import defaultdict

load_dotenv()

app = Flask(__name__)
app.config['SECRET_KEY'] = 'your_secret_key'

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
logging.basicConfig(level=logging.ERROR, filename="app_errors.log", format='%(asctime)s - %(levelname)s - %(message)s')

@app.before_request
def load_openai_key_and_check_first_request():
    """–ó–∞–≥—Ä—É–∂–∞–µ—Ç API-–∫–ª—é—á OpenAI –∏ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç, –ø–µ—Ä–≤—ã–π –ª–∏ —ç—Ç–æ –∑–∞–ø—Ä–æ—Å."""
    if not app.got_first_request: 
        openai.api_key = os.getenv('OPENAI_API_KEY')
        if not openai.api_key:
          raise ValueError("API-–∫–ª—é—á OpenAI –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω! –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –æ–∫—Ä—É–∂–µ–Ω–∏—è OPENAI_API_KEY.")

PLATFORM_PROMPTS = {
    "twitter": """–¢—ã ‚Äì —ç–∫—Å–ø–µ—Ä—Ç –ø–æ –∫–æ–Ω—Ç–µ–Ω—Ç—É –¥–ª—è Twitter (X).
–ù–∞–ø–∏—à–∏ —Ü–µ–ø–ª—è—é—â–∏–π —Ç–≤–∏—Ç –Ω–∞ —è–∑—ã–∫–µ {output_language} –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–ª–µ–¥—É—é—â–µ–π –Ω–æ–≤–æ—Å—Ç–∏:
"{–ù–û–í–û–°–¢–¨}"

üìå –ü—Ä–∞–≤–∏–ª–∞:
- –î–ª–∏–Ω–∞: –¥–æ 200 —Å–∏–º–≤–æ–ª–æ–≤
- –ú–∏–Ω–∏–º—É–º "–≤–æ–¥—ã", —Ç–æ–ª—å–∫–æ —Å—É—Ç—å!
- –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∏–Ω—Ç—Ä–∏–≥—É –∏–ª–∏ –≤–æ–ø—Ä–æ—Å
- –ù–µ –∏—Å–ø–æ–ª—å–∑—É–π —Å–ª–æ–∂–Ω—ã–µ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
- –í –∫–æ–Ω—Ü–µ –¥–æ–±–∞–≤—å 2-3 —Ö–µ—à—Ç–µ–≥–∞ –Ω–∞ —è–∑—ã–∫–µ {output_language}

üéØ –¢–≤–æ–π —Ç–µ–∫—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –µ–º–∫–∏–º, –Ω–æ –º–æ—â–Ω—ã–º!

üîπ –¢–µ–ø–µ—Ä—å —Å–≥–µ–Ω–µ—Ä–∏—Ä—É–π –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –¥–ª—è –ø–æ—Å—Ç–∞.

üì∑ –ü—Ä–æ–º–ø—Ç –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:
"–§–æ—Ç–æ—Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ {–∫–ª—é—á–µ–≤–∞—è_–¥–µ—Ç–∞–ª—å}, –≤ —Å—Ç–∏–ª–µ {–∞—Ç–º–æ—Å—Ñ–µ—Ä–∞}, —Ñ–æ–Ω {–æ–∫—Ä—É–∂–µ–Ω–∏–µ}, {–¥–æ–ø_–¥–µ—Ç–∞–ª–∏}, –∫–∏–Ω–µ–º–∞—Ç–æ–≥—Ä–∞—Ñ–∏—á–µ—Å–∫–æ–µ –æ—Å–≤–µ—â–µ–Ω–∏–µ, –≤—ã—Å–æ–∫–∞—è –¥–µ—Ç–∞–ª–∏–∑–∞—Ü–∏—è."
""",
    "instagram": """–¢—ã ‚Äì –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π SMM-–∫–æ–ø–∏—Ä–∞–π—Ç–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π —Å–æ–∑–¥–∞–µ—Ç —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ—Å—Ç—ã –¥–ª—è Instagram.
–¢–≤–æ—è –∑–∞–¥–∞—á–∞ ‚Äî –Ω–∞–ø–∏—Å–∞—Ç—å –ø–æ—Å—Ç –Ω–∞ —è–∑—ã–∫–µ {output_language} –Ω–∞ –æ—Å–Ω–æ–≤–µ —Å–ª–µ–¥—É—é—â–µ–π –Ω–æ–≤–æ—Å—Ç–∏:
"{–ù–û–í–û–°–¢–¨}"

üìå –ü—Ä–∞–≤–∏–ª–∞ –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è:
- –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –ø–æ—Å—Ç–∞: 150 —Å–∏–º–≤–æ–ª–æ–≤
- –°—Ç–∏–ª—å: –¥–∏–Ω–∞–º–∏—á–Ω—ã–π, —è—Ä–∫–∏–π, —Å —ç–º–æ—Ü–∏—è–º–∏
- –ò—Å–ø–æ–ª—å–∑—É–π —ç–º–æ–¥–∑–∏, —á—Ç–æ–±—ã –ø—Ä–∏–≤–ª–µ—á—å –≤–Ω–∏–º–∞–Ω–∏–µ
- –î–æ–±–∞–≤—å –ø—Ä–∏–∑—ã–≤ –∫ –¥–µ–π—Å—Ç–≤–∏—é (–Ω–∞–ø—Ä–∏–º–µ—Ä, "–ß—Ç–æ –¥—É–º–∞–µ—Ç–µ? –î–µ–ª–∏—Ç–µ—Å—å –≤ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è—Ö! üí¨")
- –í –∫–æ–Ω—Ü–µ –¥–æ–±–∞–≤—å –¥–æ 5 –ø–æ–ø—É–ª—è—Ä–Ω—ã—Ö —Ö–µ—à—Ç–µ–≥–æ–≤, —Å–≤—è–∑–∞–Ω–Ω—ã—Ö —Å —Ç–µ–º–æ–π, –Ω–∞ —è–∑—ã–∫–µ {output_language}

üéØ –¢–≤–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∫—Ä–∞—Ç–∫–∏–º, —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–º –∏ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å —Å—Ç–∏–ª–∏—Å—Ç–∏–∫–µ Instagram!

üîπ –¢–µ–ø–µ—Ä—å —Å–≥–µ–Ω–µ—Ä–∏—Ä—É–π –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –∏–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥–æ–π–¥–µ—Ç –¥–ª—è Instagram-–ø–æ—Å—Ç–∞.

üì∑ –ü—Ä–æ–º–ø—Ç –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:
"–ö—Ä–∞—Å–æ—á–Ω–æ–µ –∏ —Å—Ç–∏–ª—å–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ {–∫–ª—é—á–µ–≤–æ–π_–æ–±—ä–µ–∫—Ç}, –∞–∫—Ü–µ–Ω—Ç –Ω–∞ {–¥–µ—Ç–∞–ª—å}, —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–π –∏–Ω—Å—Ç–∞–≥—Ä–∞–º–º–Ω—ã–π —Å—Ç–∏–ª—å, –º—è–≥–∫–æ–µ –æ—Å–≤–µ—â–µ–Ω–∏–µ, —è—Ä–∫–∏–µ —Ü–≤–µ—Ç–∞, –∏–¥–µ–∞–ª—å–Ω–æ –ø–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Å–æ—Ü—Å–µ—Ç–µ–π."
""",
    "facebook": """–¢—ã ‚Äì –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –∫–æ–ø–∏—Ä–∞–π—Ç–µ—Ä, –∫–æ—Ç–æ—Ä—ã–π –ø–∏—à–µ—Ç –ø–æ—Å—Ç—ã –¥–ª—è Facebook.
–ù–∞ –æ—Å–Ω–æ–≤–µ —Å–ª–µ–¥—É—é—â–µ–π –Ω–æ–≤–æ—Å—Ç–∏ —Å–æ–∑–¥–∞–π –≤–æ–≤–ª–µ–∫–∞—é—â–∏–π –ø–æ—Å—Ç –Ω–∞ —è–∑—ã–∫–µ {output_language}:
"{–ù–û–í–û–°–¢–¨}"

üìå –ü—Ä–∞–≤–∏–ª–∞:
- –î–ª–∏–Ω–∞: 200-500 —Å–∏–º–≤–æ–ª–æ–≤
- –§–æ—Ä–º–∞—Ç: 2-3 –∞–±–∑–∞—Ü–∞, –±–µ–∑ —Å–ª–æ–∂–Ω—ã—Ö —Ñ—Ä–∞–∑
- –î–æ–±–∞–≤—å –ø—Ä–∏–∑—ã–≤ –∫ –æ–±—Å—É–∂–¥–µ–Ω–∏—é
- –í –∫–æ–Ω—Ü–µ ‚Äî 3-4 —Ö–µ—à—Ç–µ–≥–∞ –Ω–∞ —è–∑—ã–∫–µ {output_language}

üéØ –¢–≤–æ–π —Ç–µ–∫—Å—Ç –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–º –∏ —É–¥–æ–±–Ω—ã–º –¥–ª—è —á—Ç–µ–Ω–∏—è!

üîπ –¢–µ–ø–µ—Ä—å —Å–≥–µ–Ω–µ—Ä–∏—Ä—É–π –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ, –∫–æ—Ç–æ—Ä–æ–µ –ø—Ä–∏–≤–ª–µ—á–µ—Ç –≤–Ω–∏–º–∞–Ω–∏–µ –≤ –ª–µ–Ω—Ç–µ Facebook.

üì∑ –ü—Ä–æ–º–ø—Ç –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:
"–§–æ—Ç–æ—Ä–µ–∞–ª–∏—Å—Ç–∏—á–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ {–≥–ª–∞–≤–Ω—ã–π_–æ–±—ä–µ–∫—Ç}, –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –æ—Å–≤–µ—â–µ–Ω–∏–µ, —Å–æ—á–Ω—ã–µ —Ü–≤–µ—Ç–∞, –∫–æ–º–ø–æ–∑–∏—Ü–∏—è —Å –∞–∫—Ü–µ–Ω—Ç–æ–º –Ω–∞ {–∫–ª—é—á–µ–≤–æ–π_—ç–ª–µ–º–µ–Ω—Ç}, —Å–æ—Ü–∏–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç, –ø—Ä–∏—è—Ç–Ω—ã–π –≥–ª–∞–∑—É —Ñ–æ–Ω."
""",
}

def generate_image(prompt):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ –ø–æ —Ç–µ–∫—Å—Ç–æ–≤–æ–º—É –æ–ø–∏—Å–∞–Ω–∏—é."""
    try:
        response = openai.images.generate(
            model="dall-e-3",
            prompt=prompt,
            size="1024x1024",
            quality="standard",
            n=1,
        )
        return {"url": response.data[0].url, "error": None}

    except openai.APIError as e:
        logging.error(f"–û—à–∏–±–∫–∞ OpenAI –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {e}")
        return {"url": None, "error": f"–û—à–∏–±–∫–∞ OpenAI: {e}"}
    except Exception as e:
        logging.error(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {e}")
        return {"url": None, "error": f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}"}


def generate_social_media_post(news_text, platform, output_language):
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç —Ç–µ–∫—Å—Ç –ø–æ—Å—Ç–∞ –∏ –ø—Ä–æ–º–ø—Ç –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è."""
    platform = platform.lower().strip()  # –ù–æ—Ä–º–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞–∑–≤–∞–Ω–∏—è –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã
    prompt_template = PLATFORM_PROMPTS.get(platform)

    if not prompt_template:
        return {"text": f"–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ '{platform}' –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è.", "image_prompt": None, "success": False, "warning": None}

    prompt = prompt_template.format(–ù–û–í–û–°–¢–¨=news_text, output_language=output_language)

    try:
        response = openai.chat.completions.create(
            model="gpt-3.5-turbo",
            messages=[
                {"role": "system", "content": "You are a helpful assistant."},
                {"role": "user", "content": prompt}
            ],
            max_tokens=700,
            temperature=0.7,
        )
        full_response = response.choices[0].message.content.strip()

        match = re.search(r'üì∑ –ü—Ä–æ–º–ø—Ç –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:\s*(.*)', full_response, re.DOTALL)
        if match:
            image_prompt = match.group(1).strip().strip('"')
            image_prompt = image_prompt.format_map(defaultdict(str))
        else:
            image_prompt = None

        text_match = re.search(r'(.*?)(üîπ –¢–µ–ø–µ—Ä—å —Å–≥–µ–Ω–µ—Ä–∏—Ä—É–π|üì∑ –ü—Ä–æ–º–ø—Ç –¥–ª—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è:)', full_response, re.DOTALL)
        if text_match:
            post_text = text_match.group(1).strip()
        else:
            post_text = full_response

        return {"text": post_text, "image_prompt": image_prompt, "success": True, "warning": None}

    except openai.APIError as e:
        logging.error(f"–û—à–∏–±–∫–∞ OpenAI –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞: {e}")
        return {"text": f"–û—à–∏–±–∫–∞ OpenAI: {e}", "image_prompt": None, "success": False, "warning": None}
    except Exception as e:
        logging.error(f"–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞: {e}")
        return {"text": f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {e}", "image_prompt": None, "success": False, "warning": None}


@app.route('/', methods=['GET', 'POST'])
def index():
    """–û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è."""
    generated_texts = {}
    if request.method == 'POST':
        news_text = request.form['news_text'].strip()
        platforms = request.form.getlist('platforms')
        output_language = request.form['output_language']

        print(f"–í—ã–±—Ä–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã: {platforms}")  # –û—Ç–ª–∞–¥–æ—á–Ω—ã–π –≤—ã–≤–æ–¥

        if not news_text or not platforms:
            flash("–í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –Ω–æ–≤–æ—Å—Ç–∏ –∏ –≤—ã–±–µ—Ä–∏—Ç–µ —Å–æ—Ü—Å–µ—Ç—å.", "error")
            return render_template('index.html', generated_texts={})

        for platform in platforms:
            result = generate_social_media_post(news_text, platform, output_language)
            if result["success"]:
                if result["image_prompt"]:
                    image_result = generate_image(result["image_prompt"])
                    result["image_url"] = image_result["url"]
                    if image_result["error"]:
                        flash(f"–û—à–∏–±–∫–∞ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è ({platform}): {image_result['error']}", "error")
            generated_texts[platform] = result

    return render_template('index.html', generated_texts=generated_texts)


if __name__ == '__main__':
    app.run(host="0.0.0.0", port=int(os.environ.get("PORT", 5000)), debug=True)
```

–ü–æ–ø—Ä–æ–±—É–π —ç—Ç–æ—Ç –≤–∞—Ä–∏–∞–Ω—Ç! üöÄ