from flask import Flask, render_template, request
import random

app = Flask(__name__)

# –§—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ö–µ—à—Ç–µ–≥–æ–≤ –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º
def generate_hashtags(text):
    words = text.lower().split()
    common_tags = ["news", "update", "breaking", "trending", "socialmedia"]
    hashtags = ["#" + word for word in words if len(word) > 4][:3] + ["#" + tag for tag in random.sample(common_tags, 2)]
    return " ".join(hashtags)

# –§—É–Ω–∫—Ü–∏—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞ –ø–æ–¥ —Å–æ—Ü—Å–µ—Ç—å —Å —É—á–µ—Ç–æ–º —Å—Ç–∏–ª—è
def generate_social_media_text(news_text, platform, style):
    hashtags = generate_hashtags(news_text)
    
    if style == "formal":
        news_text = f"–í–∞–∂–Ω–∞—è –Ω–æ–≤–æ—Å—Ç—å: {news_text}"
    elif style == "informal":
        news_text = f"üî• –ß—É–≤–∞–∫, —Å–º–æ—Ç—Ä–∏ —á—Ç–æ —Å–ª—É—á–∏–ª–æ—Å—å! {news_text}"
    elif style == "friendly":
        news_text = f"üòä –ü—Ä–∏–≤–µ—Ç, –¥—Ä—É–∑—å—è! –í–æ—Ç —á—Ç–æ –ø—Ä–æ–∏–∑–æ—à–ª–æ: {news_text}"
    elif style == "professional":
        news_text = f"üì¢ –û—Ñ–∏—Ü–∏–∞–ª—å–Ω–æ–µ –∑–∞—è–≤–ª–µ–Ω–∏–µ: {news_text}"
    elif style == "sarcastic":
        news_text = f"üôÉ –û, –Ω—É –∫–æ–Ω–µ—á–Ω–æ, –µ—â—ë –æ–¥–Ω–∞ "–∑–∞–º–µ—á–∞—Ç–µ–ª—å–Ω–∞—è" –Ω–æ–≤–æ—Å—Ç—å... {news_text}"
    
    templates = {
        "twitter": f"üöÄ {news_text[:240]}... {hashtags}",
        "instagram": f"üì∏ {news_text}\n\n{hashtags}",
        "telegram": f"üîπ {news_text}\n\nüì¢ –ü–æ–¥–ø–∏—Å—ã–≤–∞–π—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª!",
        "facebook": f"üì¢ {news_text}\n\n{hashtags}",
        "linkedin": f"üíº {news_text}\n\n#ProfessionalNews",
        "tiktok": f"üéµ {news_text} üî• {hashtags}",
        "youtube": f"üé¨ {news_text}\n\n{hashtags}"
    }
    
    return templates.get(platform, "–ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è.")

@app.route('/', methods=['GET', 'POST'])
def index():
    generated_texts = {}
    if request.method == 'POST':
        news_text = request.form['news_text']
        platforms = request.form.getlist('platforms')
        style = request.form['style']
        
        for platform in platforms:
            generated_texts[platform] = generate_social_media_text(news_text, platform, style)
    
    return render_template('index.html', generated_texts=generated_texts)

if __name__ == '__main__':
    app.run(debug=True)
